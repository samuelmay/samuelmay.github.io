<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Samuel May</title>
    <link>https://samuelmay.github.io/posts/</link>
    <description>Recent content in Posts on Samuel May</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Apr 2022 17:01:01 +1100</lastBuildDate><atom:link href="https://samuelmay.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating the deployment of this website</title>
      <link>https://samuelmay.github.io/posts/deploying_this_site/</link>
      <pubDate>Wed, 06 Apr 2022 17:01:01 +1100</pubDate>
      
      <guid>https://samuelmay.github.io/posts/deploying_this_site/</guid>
      
        <description>After some previous adventures getting this Hugo site up and running, I had a working but annoying process where I would edit the site in my web projects repo (with Hugo in live server mode) then publish it across to the GitHub Pages repo with hugo -d ..\samuelmay.github.io. Then I had to commit to the web projects repo to save the work, and separately commit and push the GitHub Pages repo to deploy the site.</description>
      
    </item>
    
    <item>
      <title>Static website subresource integrity and text file line endings</title>
      <link>https://samuelmay.github.io/posts/checksums_git_crlf/</link>
      <pubDate>Sun, 03 Apr 2022 14:08:24 +1100</pubDate>
      
      <guid>https://samuelmay.github.io/posts/checksums_git_crlf/</guid>
      
        <description>When I was creating this site and playing around with Hugo, I encountered this issue for the Anatole theme. Hugo is thorough enough when it minifies resource files to add &amp;lsquo;integrity&amp;rsquo; attributes with calculated checksums for the minified files.
Now when you&amp;rsquo;re using GitHub pages or another web host that serves the content out of a Git repository, it turns out the operating system that the web host is running actually matters.</description>
      
    </item>
    
    <item>
      <title>.NET 6 with top-to-bottom async C#</title>
      <link>https://samuelmay.github.io/posts/dotnet-6-async/</link>
      <pubDate>Tue, 29 Mar 2022 12:18:31 +1100</pubDate>
      
      <guid>https://samuelmay.github.io/posts/dotnet-6-async/</guid>
      
        <description>Recently I started a new project with all the latest .NET shiny bits. Visual Studio 2022, .NET 6, Dapper as the object mapper and every damn function from top to bottom marked as async. It absolutely flies and the performance goes down great in demos. Razor is a perfectly fine templating system, the dependency injection mostly just works, and I even appreciate the &amp;lsquo;$&amp;rsquo; string interpolation. I have to say productivity with a basic server-rendered app has been noticeably higher than trying to iterate an full Angular SPA and backend API with a small team.</description>
      
    </item>
    
    <item>
      <title>Book review: &#34;Kill It With Fire&#34; by Marianne Bellotti</title>
      <link>https://samuelmay.github.io/posts/kill_it_with_fire_book/</link>
      <pubDate>Sat, 26 Mar 2022 13:00:06 +1100</pubDate>
      
      <guid>https://samuelmay.github.io/posts/kill_it_with_fire_book/</guid>
      
        <description>Kill It with Fire: Manage aging computer systems (and future proof modern ones)
This book has a lot of good advice and insight, that is unfortunately very relevant to some of the work I&amp;rsquo;m doing right now.
I liked the consideration of &amp;lsquo;momentum&amp;rsquo; and how to maintain it to avoid the cycle of half-assed rewrites and migrations that are never quite finished.
There&amp;rsquo;s an anecdote about how one US government team, working on immigration application software was using &amp;lsquo;Refugees saved from ISIS&amp;rsquo; as a metric.</description>
      
    </item>
    
  </channel>
</rss>